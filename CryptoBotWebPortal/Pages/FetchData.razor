@page "/fetchdata"

<PageTitle>Weather forecast</PageTitle>

@using CryptoBotWebPortal.Data
@using CryptoApi.Objects
@inject WeatherForecastService ForecastService
@inject IJSRuntime JsRuntime
<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>


@if (pairs == null)
{
    <p><em>Loading...</em></p>
}
else

{

    <!-- DataTales Example -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">DataTables Example</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                    <thead>
                    <tr>
                        <th>Pair symbol</th>
                        <th>Exchange</th>
                        <th>Current price</th>
                        <th>Db set</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var pair in pairs)
                    {
                        <tr>
                            <td>@pair.Name/@pair.Quote</td>
                            <td>@pair.Exchange</td>
                            <td>@pair.Price</td>
                            <td>@pair.CryDbSetId</td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>

    </div>
   
}

@code {
    private List<PricedTradingPair>? pairs;

    protected override async Task OnInitializedAsync()
    {
        pairs = await ForecastService.GetLatest100Pairs();

    }
}
