@page "/fetchtasks"

<PageTitle>User tasks</PageTitle>

@using CryptoBotWebPortal.Data
@using CryptoApi.Objects
@using TelegramBot.Objects
@inject WeatherForecastService ForecastService

<h1>User tasks</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (USERTasks == null)
{
    <p><em>Loading...</em></p>
}
else
{<!-- Page Heading -->
    <h1 class="h3 mb-2 text-gray-800">Tables</h1>
    <p class="mb-4">DataTables is a third party plugin that is used to generate the demo table below.
        For more information about DataTables, please visit the <a target="_blank"
                                                                   href="https://datatables.net">official DataTables documentation</a>.</p>

    <!-- DataTales Example -->
    <div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">DataTables Example</h6>
    </div>
    <div class="card-body">
    <div class="table-responsive">
    <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
        <thead>
        
        <tr>
            <th>Edit task</th>
            <th>Enabled</th>
            <th>Id</th>
            <th>User Id</th>
            <th>Pair symbol</th>
            <th>Exchange</th>
            <th>User telegram id</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var pair in USERTasks)
        {
            <tr>
                <td>
                    <a style="padding: 10px 20px" class="btn-primary"  href="/taskedit/@pair.Id">Edit</a>
                </td>
                <td>
                    <input type="checkbox" checked="@pair.Enabled"/>
                </td>
                <td>@pair.Id</td>
                <td>@pair.OwnerId</td>
                <td>
                    <p>@StringToHtml(pair.TaskStatusWithLink())</p></td>
                <td>@pair.ExchangePlatform</td>
                <td>@pair.User.TelegramId</td>

            </tr>
        }
        </tbody>
    </table>
        </div>
    </div>
    </div>
}

@code {
    private List<CryptoPair>? USERTasks;


    protected override async Task OnInitializedAsync()
    {
        USERTasks = await ForecastService.UsersTasks();
    }

    private MarkupString StringToHtml(string line)
    {
        return (MarkupString) line;
    }
}
