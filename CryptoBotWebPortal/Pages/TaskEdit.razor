@page "/taskedit/{taskID}"

<PageTitle>Users</PageTitle>


@using CryptoBotWebPortal.Data
@using CryptoApi.Objects

@using Microsoft.AspNetCore.Mvc.RazorPages
@using TelegramBot.Objects
@inject WeatherForecastService ForecastService
@inject NavigationManager NavigationManager

<h1>Task @StringToHtml(@pair.ToStringWithLink()) edit:</h1>
<div id="taskedit">
    <h5>User id</h5>
    <p>@user.Id</p>
    <h5>User telegram id</h5>
    <p>@user.TelegramId</p>
    <h5>Pair info</h5>

    <p>Symbol: </p>
    <p>Pair base:</p> <input type="text" name="symbol" @bind="pair.PairBase"/>
    <p>Pair quote:</p> <input type="text" name="symbol" @bind="pair.PairQuote"/>

    <h5>Price trigger: </h5>
    <input type="text" @bind="pair.Price"/>

    <h5>Task active</h5>
    <input type="checkbox" @bind="pair.Enabled"/>

    <h5>Rise or fall of trigger price</h5>
    <input type="checkbox" @bind="pair.GainOrFall"/>

    <h5>Exchange platform</h5>
    <select @bind="pair.ExchangePlatform">
        <option value="Binance">Binance</option>
        <option value="Bitget">Bitget</option>
        <option value="Okx">Okx</option>
        <option value="Kucoin">Kucoin</option>
        <option value="GateIO">GateIO</option>
    </select>
    
    <h5>Note</h5>
    <input type="text" @value="pair.Note"/>
    <p></p>
    <input type="button" @onclick="SaveSettings" value="Save changes"/>

</div>

@code {
    private UserConfig? user { get; set; }
    private CryptoPair? pair { get; set; }
    [Parameter] 
    public string taskID { get; set; }
    protected override async Task OnInitializedAsync()
    {
        pair = await ForecastService.GetUserCPSetts(int.Parse(taskID));
        user = pair.User;
    }

    private async Task SaveSettings()
    {
        await ForecastService.SaveTaskSettings(pair);
        NavigationManager.NavigateTo("/fetchtasks");

    }
    private MarkupString StringToHtml(string line)
    {
            return (MarkupString) line;
    }

}