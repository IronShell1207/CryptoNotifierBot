//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TelegramBot {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TelegramBot.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pair {0} added to the black list for breakout bot..
        /// </summary>
        internal static string blacklistPairAdded {
            get {
                return ResourceManager.GetString("blacklistPairAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pair {0} already exists in the black list..
        /// </summary>
        internal static string blacklistPairExists {
            get {
                return ResourceManager.GetString("blacklistPairExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To add comment for task with id {0} for pair {1} send your comment in next message with this attached..
        /// </summary>
        internal static string CPAddComment {
            get {
                return ResourceManager.GetString("CPAddComment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I can&apos;t find any pairs matching your request!.
        /// </summary>
        internal static string CPCantFindAnyPairsMatching {
            get {
                return ResourceManager.GetString("CPCantFindAnyPairsMatching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select task you need to edit.
        /// </summary>
        internal static string CPEditbySymbol {
            get {
                return ResourceManager.GetString("CPEditbySymbol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To edit any task send command with task id or symbol name. For example: /edit 210 34000 or /edit BTC/USDT or /edit BTC.
        /// </summary>
        internal static string CPEditEmpty {
            get {
                return ResourceManager.GetString("CPEditEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To edit price of {0} pair with id {1} please send new price with this message attached!.
        /// </summary>
        internal static string CPEditPair {
            get {
                return ResourceManager.GetString("CPEditPair", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 🖍Task edited successfully:
        ///
        ///{0}.
        /// </summary>
        internal static string CPEditTaskComplete {
            get {
                return ResourceManager.GetString("CPEditTaskComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 🖍Task created successfully:
        ///
        ///.
        /// </summary>
        internal static string CPEditTaskCreated {
            get {
                return ResourceManager.GetString("CPEditTaskCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To remove any task send command with task id or symbol name. For example: /remove 51 or /remove BTC/USDT or /remove ETH.
        /// </summary>
        internal static string CPRemoveEmpty {
            get {
                return ResourceManager.GetString("CPRemoveEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is your tasks with matching request: .
        /// </summary>
        internal static string CPShowTasks {
            get {
                return ResourceManager.GetString("CPShowTasks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ✅ New monitoring task has been created.\nDetails of your task:\n{0}.
        /// </summary>
        internal static string cryptoPairAdded {
            get {
                return ResourceManager.GetString("cryptoPairAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I can&apos;t remove your pair because of some problems!.
        /// </summary>
        internal static string cryptoPairCantRemove {
            get {
                return ResourceManager.GetString("cryptoPairCantRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select task you needed to remove from your tasks.
        /// </summary>
        internal static string cryptoPairRemoveBySymbol {
            get {
                return ResourceManager.GetString("cryptoPairRemoveBySymbol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Crypto pair {0} id {1} removed from monitoring!.
        /// </summary>
        internal static string cryptoPairRemoved {
            get {
                return ResourceManager.GetString("cryptoPairRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Brief information about this bot: 
        ///This bot is written on Python3 with pyTelegramBotApi library.
        ///This bot uses realtime binance exchange rates!
        ///⛏ Developer: Ironshell
        ///🛸 Github: https://github.com/IronShell1207/CryCurMonitorBot
        ///My web: https://droidapps.cf/en/
        ///If bot is usefull for you, you can buy my a ☕️ and thx 2u).
        ///\n🥇ETH: 0xa35fbab442da4e65413045a4b9b147e2a0fc3e0c\n🎈LTC: LQiBdMeCNWAcSBEhc2QT3ffFz8a2t7zPcG.
        /// </summary>
        internal static string helpMsg {
            get {
                return ResourceManager.GetString("helpMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exchange for new crypto pair setted. Set price in next message.
        /// </summary>
        internal static string newPairAfterExchangeSetPrice {
            get {
                return ResourceManager.GetString("newPairAfterExchangeSetPrice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For creating new monitoring task, send me crypto pair with following next format of message with this message attached:
        ///BASE/QUOTE or BASE QUOTE
        ///Example: BTC/USDT or BTC USDT.
        /// </summary>
        internal static string newPairRequestingForPair {
            get {
                return ResourceManager.GetString("newPairRequestingForPair", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrong price. Try again.
        /// </summary>
        internal static string newPairWrongPrice {
            get {
                return ResourceManager.GetString("newPairWrongPrice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You don&apos;t have any tasks yet. To add new send /create.
        /// </summary>
        internal static string noCryptoTasks {
            get {
                return ResourceManager.GetString("noCryptoTasks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are successfully subscribed to breakout notifications. Current settings: {0}. .
        /// </summary>
        internal static string subscribedSucs {
            get {
                return ResourceManager.GetString("subscribedSucs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To add new pair to the black list send it with this message attached using next format: BTC/USDT or BTC USDT.
        /// </summary>
        internal static string ToaddToTheBlackList {
            get {
                return ResourceManager.GetString("ToaddToTheBlackList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hello! I&apos;m crypto currency exchange monitor bot. I can send you 💬 notification when your currency is raise 📉 or fall 📈 to setted value 💰.
        ///For example, you need to know when Bitcoin hits the $ 40,000 mark. 
        ///To do this, press the &apos;Create 📊&apos; button and send the bot either the name of the &apos;BTC&apos; coin and select a pair from the options offered, or send the &apos;BTC/USDT&apos; pair at once in this format.
        ///After that, the bot will ask you to indicate the price point that you want to know about. 
        ///You send the bot a  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string welcomeMsg {
            get {
                return ResourceManager.GetString("welcomeMsg", resourceCulture);
            }
        }
    }
}
